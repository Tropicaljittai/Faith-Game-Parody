@startuml
class entity.Entity {
+ float worldX
+ float speed
+ BufferedImage up1
+ String direction
+ int spriteCounter
+ int spriteNum
+ Rectangle solidArea
+ int solidAreaDefaultX
+ int actionLockCounter
+ boolean collisionOn
}
class main.KeyHandler {
~ GamePanel gp
~ int attackState
+ boolean upPressed
+ void keyTyped(KeyEvent)
+ void keyPressed(KeyEvent)
+ void keyReleased(KeyEvent)
}
class tile.Tile {
+ BufferedImage image
+ boolean collision
}
class main.CollisionChecker {
~ GamePanel gp
+ int checkObject(Entity,boolean)
+ void checkObjectM()
+ void checkObjectC()
+ void checkObjectTE()
+ void checkObjectT()
+ void checkObjectDemonic()
+ void checkObjectP()
+ void checkObjectF()
+ void checkObjectD()
}
class object.obj_Tree {
}
class object.obj_Truck {
+ boolean positionFound
~ GamePanel gp
+ int speed
+ void update()
}
class object.obj_Well {
}
class main.GamePanel {
~ long pause
~ int originalTileSize
~ int originalTileHeight
~ int scale
+ int originaltileSizeRes
+ int tileSizeMonster
+ int tileHeightMonster
+ int tileSizeShed
+ int tileHeightShed
+ int tileSizeWater
+ int tileHeightWater
+ int deerWidth
+ int deerHeight
+ int deerRunWidth
+ int deerRunHeight
+ int ghostHeight
+ int ghostWidth
+ int stonesHeight
+ int stonesWidth
+ int tileSizeRes
+ int tileSize
+ int tileHeight
+ int tileSizeTree
+ int tileHeightTree
+ int tileSizeKey
+ int tileHeightKey
+ int carWidth
+ int carHeight
+ int tileSizeWell
+ int tileHeightWell
+ int tileSizeBones
+ int tileHeightBones
+ int tileSizeSac
+ int tileHeightSac
+ int maxScreenCol
+ int maxScreenRow
+ int screenWidth
+ int screenHeight
+ int maxWorldCol
+ int maxWorldRow
+ int worldWidth
+ int worldHeight
~ int FPS
+ boolean ending
+ boolean picture
~ int alreadyTried
~ boolean objectCleared
+ int lastObject
~ TileManager tileM
~ KeyHandler keyH
~ Sound sound
~ Sound2 sound2
+ CollisionChecker cChecker
+ AssetSetter aSet
~ Thread gameThread
~ UI ui
+ Player player
+ SuperObject[] obj
+ Cultist[] cultist
+ Cultist leader
+ m_Capybara monster
+ Ghost ghost
+ Deer deer
+ Deer deer2
+ obj_Bullet bullet
+ Hunter hunter
+ obj_Fox fox
+ obj_Truck truck
+ obj_Photo photo
+ DemonicDeer demonDeer
+ int gameState
+ int playState
+ int pauseState
+ int introState
+ int photoState
+ int deadState
+ int deerEnding
+ int goodEnd
+ int cultEnding
+ void findCenter(Ghost,int)
+ void monsterRandomizer()
+ void photoGenerator()
+ void keyGenerator()
+ void setupGame()
+ void startGameThread()
+ void run()
+ void resetAll()
+ void update()
+ void paintComponent(Graphics)
+ void playMusic(int)
+ void playMusicNoLoop(int)
+ void playMusicNoLoop2(int)
+ void playMusic()
+ void stopMusic()
+ void playSE(int)
}
class object.obj_Photo {
~ GamePanel gp
+ int foundState
}
class main.Main {
+ {static} void main(String[])
}
class main.UtilityTool {
+ BufferedImage scaleImage(BufferedImage,int,int)
}
class object.obj_Stones {
}
class entity.Deer {
+ int attacked
+ int spriteCounter2
+ int hunterState2
+ int spriteNum2
+ int width
+ int defState
+ int attackedState
+ int hunterState
+ int state
+ int sleepState
+ int deadState
~ GamePanel gp
+ BufferedImage idle1
+ int dist1
+ void getImage()
+ void runAway()
+ void hunterChase()
+ void update()
+ void draw(Graphics2D,GamePanel)
}
class object.obj_wallShed {
}
class object.obj_Key {
~ GamePanel gp
}
class tile.TileManager {
~ GamePanel gp
+ Tile[] tile
+ int[][] mapTileNum
+ void getTileImage()
+ void loadMap(String)
+ void draw(Graphics2D)
}
class object.obj_Bullet {
+ int speed
+ boolean hit
+ String direction
+ boolean positionFound
+ boolean launched
+ void update(GamePanel)
+ void move(GamePanel)
}
class entity.DemonicDeer {
+ boolean killedPlayer
+ boolean positionFound
+ int defState
+ int sleepState
+ int state
~ GamePanel gp
+ BufferedImage run1
+ void getImage()
+ void attackPlayer()
+ void update()
+ void killedPlayer(GamePanel)
+ void draw(Graphics2D,GamePanel)
}
class object.obj_Bones {
}
class object.obj_Sac {
}
class object.obj_Fox {
~ GamePanel gp
+ boolean attacked
}
class monster.m_Capybara {
+ int repel
~ BufferedImage dead
+ boolean spawned
+ int state
+ boolean positionSet
+ int defState
+ int sleepState
+ int dist1
+ int attState
+ int endState
+ int deadState
+ void get_image()
+ float findAngle(GamePanel)
+ void set_action(GamePanel)
+ void killedPlayer(GamePanel)
+ void end(GamePanel)
+ void set_Run(GamePanel)
+ void update(GamePanel)
+ void draw(Graphics2D,GamePanel)
}
class entity.Ghost {
+ int defState
+ int wellState
+ int stonesState
+ int waterState
+ int bonesState
+ int state
+ int drawStateCounter
+ boolean positionSet
~ BufferedImage image
~ GamePanel gp
+ void getImage()
+ void update()
+ void draw(Graphics2D,GamePanel)
}
class main.UI {
~ GamePanel gp
~ Graphics2D g2
~ Font arial_40
+ boolean messageOn
+ String message
~ int messageCounter
+ boolean gameFinished
+ String[] dialogues
+ String currentDialogue
~ int i
~ double playTime
~ DecimalFormat dFormat
+ void showMessage(String)
+ void draw(Graphics2D)
+ void drawEnding3()
+ void drawEnding2()
+ void drawEnding()
+ void drawDeadScreen()
+ void drawPauseScreen()
+ void setDialogues()
+ void drawIntroScreen()
+ void introHelper()
+ void dialogueWait()
+ int getXCenter(String)
}
class entity.Cultist {
+ boolean positionSet
+ boolean killedPlayer
~ GamePanel gp
+ void getImage()
+ void attackPlayer()
+ void update()
+ void draw(Graphics2D,GamePanel)
}
class object.obj_Water {
}
class main.AssetSetter {
~ GamePanel gp
+ int size
+ void treeSetter(int,int,int)
+ void cultistSetter(int,int,int)
+ void setTree()
+ void setCultists()
+ void setGun()
+ void setCar()
+ void setWater()
+ void setShed()
+ void setWell()
+ void setStones()
+ void setBones()
+ void setSac()
}
class object.obj_Shed {
}
class main.Sound {
~ Clip clip
~ URL[] soundURL
+ void setFile(int)
+ void play()
+ void loop()
+ void stop()
}
class object.SuperObject {
+ int attacked
+ int defState
+ int state
+ int attackedState
+ BufferedImage image
+ String name
+ boolean collision
+ int worldX
+ Rectangle solidArea
+ int objCounter
+ int solidAreaDefaultX
+ int solidAreaDefaultY
+ void drawFox(Graphics2D,GamePanel)
+ void drawTree(Graphics2D,GamePanel)
+ void drawGun(Graphics2D,GamePanel)
+ void drawBullet(Graphics2D,GamePanel)
+ void drawShed(Graphics2D,GamePanel)
+ void drawCar(Graphics2D,GamePanel)
+ void drawKey(Graphics2D,GamePanel)
+ void drawPhoto(Graphics2D,GamePanel)
+ void drawTruck(Graphics2D,GamePanel)
+ void drawWell(Graphics2D,GamePanel)
+ void drawStones(Graphics2D,GamePanel)
+ void drawWater(Graphics2D,GamePanel)
+ void drawBones(Graphics2D,GamePanel)
+ void drawSac(Graphics2D,GamePanel)
}
class main.Sound2 {
~ Clip clip
~ URL[] soundURL
+ void setFile(int)
+ void play()
+ void loop()
+ void stop()
}
class entity.Hunter {
+ boolean found
~ int dist1
~ int dist2
~ int distance
~ GamePanel gp
+ int defState
+ int hunterState
+ int sleepState
+ int state
+ void getImage()
+ void chaseDeer()
+ void update()
+ void draw(Graphics2D,GamePanel)
}
class entity.Player {
+ boolean played
+ boolean hasGun
+ int banishedGhosts
+ int multiplier
+ int attackState
+ int defaultState
+ int deadState
+ int deadState2
+ int state
+ BufferedImage attackU
+ int screenX
+ int screenY
~ GamePanel gp
~ KeyHandler keyH
+ int hasKey
+ void setDefaultValues()
+ BufferedImage setup(String,int,int)
+ void getPlayerImage()
+ void update()
+ void pickUpObject(int)
+ void getGun()
+ void draw(Graphics2D)
}
class object.obj_Car {
}
class object.obj_Gun {
}


java.awt.event.KeyListener <|.. main.KeyHandler
object.SuperObject <|-- object.obj_Tree
object.SuperObject <|-- object.obj_Truck
object.SuperObject <|-- object.obj_Well
main.Runnable <|.. main.GamePanel
main.JPanel <|-- main.GamePanel
object.SuperObject <|-- object.obj_Photo
object.SuperObject <|-- object.obj_Stones
entity.Entity <|-- entity.Deer
object.SuperObject <|-- object.obj_wallShed
object.SuperObject <|-- object.obj_Key
object.SuperObject <|-- object.obj_Bullet
entity.Entity <|-- entity.DemonicDeer
object.SuperObject <|-- object.obj_Bones
object.SuperObject <|-- object.obj_Sac
object.SuperObject <|-- object.obj_Fox
entity.Entity <|-- monster.m_Capybara
entity.Entity <|-- entity.Ghost
entity.Entity <|-- entity.Cultist
object.SuperObject <|-- object.obj_Water
object.SuperObject <|-- object.obj_Shed
entity.Entity <|-- entity.Hunter
entity.Entity <|-- entity.Player
object.SuperObject <|-- object.obj_Car
object.SuperObject <|-- object.obj_Gun
@enduml